#!/usr/bin/env bash

JOT_HOME=${JOT_HOME:-.}
JOT_EDITOR=${JOT_EDITOR:-$EDITOR}
JOT_COPY=${JOT_COPY:-xclip}
JOT_DATE_FILE_FMT=${JOT_DATE_FILE_FMT:-%Y-%m-%d}
JOT_DATE_SHOW_FMT=${JOT_DATE_SHOW_FMT:-%a, %d %b %Y}
JOT_EXT=${JOT_EXT:-txt}

# Drop trailing /
JOT_HOME=${JOT_HOME%/}

parse_date() {
  case $1 in
    td|today|'')
      date +"$JOT_DATE_FILE_FMT"
      ;;
    yd|yesterday)
      date -d yesterday +"$JOT_DATE_FILE_FMT"
      ;;
    tm|tommorow)
      date -d tomorrow +"$JOT_DATE_FILE_FMT"
      ;;
    *)
      date -d "$1" +"$JOT_DATE_FILE_FMT"
      ;;
  esac
}

file_from_date() {
  date=$(parse_date "$1")
  echo "$JOT_HOME/$date.$JOT_EXT"
}

usage() {
  cat <<-EOF
Usage: jot [command] [date]

command:

  e[dit]  edit notes for one or more days (default)
  c[opy]  copy notes for a day
  l[ist]  list notes
  help    print this text

date:

  td or today      perform command for today
  yd or yesterday  perform command for yesterday
  tm or tomorrow   perform command for tomorrow
  2020-04-28       perform command for 2020-04-28
  3 days ago       perform command for 3 days ago
  2 days           perform command for 2 days ahead

Any other command will be executed and passed any notes after --

For example:

  jot rm -v -- 2020-04-28

  jot cat -- yd td

  jot less -- tm

  jot ls
EOF
}

call() {
  local seen_separator=false
  local cmd=''
  local files=()

  for arg in "$@"; do
    if [[ $seen_separator == 'false' ]]; then
      if [[ "$arg" == '--' ]]; then
        seen_separator=true
      else
        cmd="$cmd$arg "
      fi
    else
      local file=$(file_from_date "$arg")
      files+=("$file")
    fi
  done

  local files_str="${files[@]}"

  if [[ -z "$files_str" ]]; then
    files_str=$(file_from_date td)
  fi

  sh -c "$cmd $files_str"
}

copy() {
  local file=$(file_from_date "$1")

  grep -v '^#' "$file" | $JOT_COPY

  local lines=$(grep -v '^#' "$file" | wc -l)

  [[ $? -eq 0 ]] && echo "Copied $lines line(s) to clipboard"
}

edit() {
  local files=()

  if [[ $# -eq 0 ]]; then
    local file=$(file_from_date td)
    files=("$file")
  else
    for arg in "$@"; do
      local file=$(file_from_date "$arg")
      files+=("$file")
    done
  fi

  local files_str="${files[@]}"

  sh -c "$JOT_EDITOR $JOT_EDITOR_OPTS $files_str"
}

list() {
  today_date=$(date +"$JOT_DATE_SHOW_FMT")

  for file in "$JOT_HOME"/*.$JOT_EXT; do
    file_date=$(basename "$file" .$JOT_EXT)
    date=$(date -d "$file_date" +"$JOT_DATE_SHOW_FMT" | tr -d '\n')
    lines=$(wc -l "$file" | cut -d ' ' -f 1)

    if [[ "$date" == "$today_date" ]]; then
      echo -n '> '
    else
      echo -n '  '
    fi

    echo -n "$date"
    printf ' (%2d) ' $lines
    echo "$file"
  done
}

case $1 in
  e|edit|'')
    shift
    edit "$@"
    exit
    ;;
  c|copy)
    date=$(parse_date "$2")
    copy "$date"
    exit
    ;;
  l|list)
    list
    exit
    ;;
  help|-h|--help)
    usage
    exit
    ;;
  *)
    call "$@"
    exit
    ;;
esac
