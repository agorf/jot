#!/usr/bin/env bash

[[ -f $JOT_HOME/.env ]] && source $JOT_HOME/.env

JOT_HOME="${JOT_HOME:-.}"
JOT_EDITOR=${JOT_EDITOR:-$EDITOR}
JOT_COPY=${JOT_COPY:-xclip}
JOT_DATE_FMT="${JOT_DATE_FMT:-%Y-%m-%d}"
JOT_DATE_FRIENDLY_FMT="${JOT_DATE_FRIENDLY_FMT:-%a, %d %b %Y}"
JOT_EXT=${JOT_EXT:-txt}

# Drop trailing /
JOT_HOME="${JOT_HOME%/}"

check_file_exists() {
  if [[ ! -f "$1" ]]; then
    echo "File does not exist: $1"
    exit 1
  fi
}

parse_date() {
  case $1 in
    tod|today|td|'')
      date +"$JOT_DATE_FMT"
      ;;
    y|yesterday|yd)
      date -d yesterday +"$JOT_DATE_FMT"
      ;;
    tom|tommorow|tm)
      date -d tomorrow +"$JOT_DATE_FMT"
      ;;
    *)
      echo $1
      ;;
  esac
}

file_from_date() {
  date="$(parse_date $1)"
  echo "$JOT_HOME/$date.$JOT_EXT"
}

usage() {
  cat <<-EOF
Usage: jot [command] [date]

command:

  e[dit]        edit notes for one or more days (default)
  c[opy] or cp  copy notes for a day
  l[ist] or ls  list notes
  help          print this text

date:

  tod[ay]     or td  perform command for today
  y[esterday] or yd                  ... yesterday
  tom[orrow]  or tm                  ... tomorrow
  2020-04-28                         ... 2020-04-28

Any other command will be executed and passed any notes after --

For example:

  jot less -N -- yd td

  jot cat
EOF
}

call() {
  local seen_separator=false
  local cmd=''
  local files=()

  for arg in "$@"; do
    if [[ $seen_separator == 'false' ]]; then
      if [[ "$arg" == '--' ]]; then
        seen_separator=true
      else
        cmd="$cmd$arg "
      fi
    else
      local file="$(file_from_date $arg)"
      files+=("$file")
    fi
  done

  local files_str="${files[@]}"

  if [[ -z "$files_str" ]]; then
    files_str="$(file_from_date td)"
  fi

  sh -c "$cmd $files_str"
}

copy() {
  local file="$(file_from_date $1)"

  check_file_exists $file

  grep -v '^#' "$file" | $JOT_COPY

  local lines=$(grep -v '^#' "$file" | wc -l)

  [[ $? -eq 0 ]] && echo "Copied $lines line(s) to clipboard"
}

edit() {
  local files=()

  if [[ $# -eq 0 ]]; then
    local file="$(file_from_date td)"
    files=("$file")
  else
    for arg in "$@"; do
      local file="$(file_from_date $arg)"
      files+=("$file")
    done
  fi

  local files_str="${files[@]}"

  sh -c "$JOT_EDITOR $JOT_EDITOR_OPTS $files_str"
}

list() {
  for file in "$JOT_HOME"/*.$JOT_EXT; do
    date=$(basename $file .$JOT_EXT)
    lines=$(wc -l $file | cut -d ' ' -f 1)
    date -d "$date" +"$JOT_DATE_FRIENDLY_FMT" | tr -d '\n'
    printf ' (%2d) ' $lines
    echo $file
  done

  echo
  echo -n 'Today is '
  date +"$JOT_DATE_FRIENDLY_FMT"
}

case $1 in
  e|edit|'')
    shift
    edit "$@"
    exit
    ;;
  v|view)
    date="$(parse_date $2)"
    view "$date"
    exit
    ;;
  c|copy|cp)
    date="$(parse_date $2)"
    copy "$date"
    exit
    ;;
  l|list|ls)
    list
    exit
    ;;
  help|-h|--help)
    usage
    exit
    ;;
  *)
    call "$@"
    exit
    ;;
esac
